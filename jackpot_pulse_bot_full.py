
import telebot
import random
import time
import threading
import json
import os

TOKEN = '7102389575:AAHMc_209ElVL5Qlv7-bLhCkMIiVD9T8Obw'
bot = telebot.TeleBot(TOKEN, parse_mode='HTML')

sponsor_channels = [
    '@Vsi_PROMO',
    '@uaclub_casinoman'
]

ADMIN_ID = 7262164512
DATA_FILE = 'users_data.json'

# –ñ–∞—Ä—Ç–∏ –¥–ª—è —Ñ–∞—Ä—Ç-–∫–∞—Ä—Ç–∫–∏
jokes = [
    "–§–∞—Ä—Ç –ø–æ—Å—Ç—É–∫–∞–≤ ‚Äî –Ω–µ –ø—Ä–∏–∫–∏–¥–∞–π—Å—è, —â–æ —Ç–µ–±–µ –Ω–µ–º–∞—î –≤–¥–æ–º–∞.",
    "–ö—Ä–∞—â–µ –æ–¥–∏–Ω —Ä–∞–∑ –ø–æ—â–∞—Å—Ç–∏—Ç–∏, –Ω—ñ–∂ —Å—Ç–æ —Ä–∞–∑—ñ–≤ –ø–æ—à–∫–æ–¥—É–≤–∞—Ç–∏.",
    "–§–∞—Ä—Ç ‚Äî —Ü–µ –∫–æ–ª–∏ –∑–∞ —Ç–µ–±–µ –≥—Ä–∞—é—Ç—å –Ω–∞–≤—ñ—Ç—å –ª—ñ—Ö—Ç–∞—Ä—ñ –Ω–∞ –≤—É–ª–∏—Ü—ñ.",
    "–Ø–∫—â–æ –Ω–µ –ø–æ—â–∞—Å—Ç–∏–ª–æ, –ø–æ—á–µ–∫–∞–π ‚Äì —Å–∫–æ—Ä–æ –ø–æ–≤–µ–∑–µ!",
]

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
if os.path.exists(DATA_FILE):
    with open(DATA_FILE, 'r') as f:
        users_data = json.load(f)
        users_data = {int(k): v for k, v in users_data.items()}
else:
    users_data = {}

def save_data():
    with open(DATA_FILE, 'w') as f:
        json.dump({str(k): v for k, v in users_data.items()}, f, indent=4)

# –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –∑ –∫–Ω–æ–ø–∫–∞–º–∏
main_keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
main_keyboard.row('üéÅ –©–æ–¥–µ–Ω–Ω–∏–π —Ñ–∞—Ä—Ç', 'üÉè –§–∞—Ä—Ç-–∫–∞—Ä—Ç–∫–∞')
main_keyboard.row('üèÜ –†–æ–∑—ñ–≥—Ä–∞—à—ñ', 'üëØ –ó–∞–ø—Ä–æ—Å–∏—Ç–∏ –¥—Ä—É–≥–∞')
main_keyboard.row('üìä –ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å', 'üì¢ –°–ø–æ–Ω—Å–æ—Ä–∏ / –ù–æ–≤–∏–Ω–∏')
main_keyboard.row('‚≠êÔ∏è –¢–æ–ø 5 –≥—Ä–∞–≤—Ü—ñ–≤', 'üéü –ü—Ä–æ–º–æ–∫–æ–¥')
main_keyboard.row('üì£ –î–æ–¥–∞—Ç–∏ —Å–≤—ñ–π –∫–∞–Ω–∞–ª —É Jackpot Pulse')

# –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –±–∞–ª–∞–Ω—Å—É —Ç–∞ –≤–∏–≤–µ–¥–µ–Ω–Ω—è
balance_keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
balance_keyboard.row('üìä –ë–∞–ª–∞–Ω—Å', 'üí∏ –í–∏–≤–µ—Å—Ç–∏')

# –ü—Ä–æ–º–æ–∫–æ–¥–∏
promocodes = {
    'nt7v-wz1y-tjbz-j15a': {'value': 45, 'activations': 30},
    'u0pp-rrga-9q5g-ewv5': {'value': 35, 'activations': 30},
    'd7gg-tmgl-2mhv-3s5t': {'value': 25, 'activations': 30},
    't6cz-xuk8-nhao-ejs6': {'value': 25, 'activations': 30},
    'qpwr-ckpw-iqnk-eo47': {'value': 20, 'activations': 30},
    'q3pf-xgb6-9owd-6vjt': {'value': 15, 'activations': 30},
    'nnf1-56z3-urzx-ocq3': {'value': 20, 'activations': 30},
    '1gpw-gvvh-n8ty-g4ds': {'value': 20, 'activations': 30},
    'cxae-68zk-3cs0-lyte': {'value': 15, 'activations': 30},
    '62j1-6zsh-j5i6-s8k7': {'value': 15, 'activations': 30},
    '74c2-eu9v-in1u-rtgh': {'value': 30, 'activations': 30},
    '8ttb-r3km-m0ol-lk7k': {'value': 25, 'activations': 30},
    'dygo-l42j-d6bj-5b38': {'value': 20, 'activations': 30},
    '9gt8-2zvl-tx3v-dsei': {'value': 25, 'activations': 30},
    'bipg-jvs8-n4qj-ppkk': {'value': 20, 'activations': 30},
    'ig2j-inlo-qbzw-o78i': {'value': 25, 'activations': 30},
    'spbx-ldu7-x9om-wfmb': {'value': 25, 'activations': 30},
    '4ocs-s1ig-164x-qyvk': {'value': 25, 'activations': 30},
    'mvod-y9tk-s2xf-uul9': {'value': 15, 'activations': 30},
    'bgcj-5duz-1iev-eqdh': {'value': 15, 'activations': 30},
    '0fiz-wki6-txmt-oppv': {'value': 15, 'activations': 30},
    'y9wg-xsr7-hhmz-i0bd': {'value': 30, 'activations': 30},
    '3hu6-s0de-8ona-xq81': {'value': 30, 'activations': 30},
    'fchg-t8a5-bqno-lksz': {'value': 20, 'activations': 30},
    'ox35-9qtm-c4qq-vkv5': {'value': 20, 'activations': 30},
    '1the-1rf8-aawk-6n4y': {'value': 20, 'activations': 30},
    'xqd7-clb4-9n49-zbyn': {'value': 30, 'activations': 30},
    '0mlm-tnix-wsqa-s10y': {'value': 15, 'activations': 30},
    'nl84-0s7e-c0ad-smuj': {'value': 15, 'activations': 30},
    'c4b8-sk3y-giw1-t6bq': {'value': 25, 'activations': 30},
    'tmym-xrl3-ztdh-kps4': {'value': 15, 'activations': 30},
    'suxe-i3cz-an5l-tbyo': {'value': 30, 'activations': 30},
    'tgt3-znkg-9mnr-ht08': {'value': 15, 'activations': 30},
    '7usj-k7zt-f4un-9ghp': {'value': 25, 'activations': 30},
    'y1qd-lua7-hkqt-ql11': {'value': 30, 'activations': 30},
    'cmd7-k6cw-7a1y-o0dm': {'value': 15, 'activations': 30},
    '3ipx-yrmk-wkd3-fvyk': {'value': 30, 'activations': 30},
    'z174-k22u-soyy-cwyv': {'value': 30, 'activations': 30},
    'mu3e-<OutputTruncated>': {'value': 30, 'activations': 30},
    'isus-lx3b-vzv3-efib': {'value': 20, 'activations': 30},
    '3dkf-edm2-iyiq-1vxw': {'value': 20, 'activations': 30},
    's9g1-63ly-7oen-ftio': {'value': 25, 'activations': 30},
    'y52l-cwkz-1j64-rt47': {'value': 30, 'activations': 30},
    '93kl-2kvd-w6y5-bqmr': {'value': 30, 'activations': 30},
    '3syo-akh4-kq0m-egoc': {'value': 25, 'activations': 30},
    'r9qc-af7d-85cg-w397': {'value': 15, 'activations': 30},
    'q6fz-g4af-ywd5-jvnk': {'value': 25, 'activations': 30},
    'zz8h-7bmx-ke5y-a7k9': {'value': 15, 'activations': 30},
    'zeca-579k-l1b9-xotr': {'value': 20, 'activations': 30},
    'ejtu-ezos-i4sh-87fr': {'value': 25, 'activations': 30},
    'nt65-mglo-85gl-s72x': {'value': 30, 'activations': 30},
    'yii9-i4ck-bc4x-l5l8': {'value': 20, 'activations': 30},
    'f07a-4jvz-cmcb-yql9': {'value': 25, 'activations': 30},
    '2jw1-jv1n-a4bo-qey5': {'value': 25, 'activations': 30},
    'jifb-9rii-u5uz-9vly': {'value': 25, 'activations': 30},
    'c7jg-50wo-xrtu-3ca2': {'value': 20, 'activations': 30},
    'w6x4-5fz7-ktrt-xcd5': {'value': 15, 'activations': 30},
    '8l5a-2cxv-6388-l558': {'value': 30, 'activations': 30},
    'istt-hpw7-ycir-ccl1': {'value': 30, 'activations': 30},
    'jmln-yb5s-iv5f-d4w8': {'value': 15, 'activations': 30},
    '8kvm-fmxe-dzny-7odw': {'value': 20, 'activations': 30},
    'teuc-9hbs-m1gl-xm7w': {'value': 25, 'activations': 30},
    'h4mu-oxv1-cz2h-xssl': {'value': 25, 'activations': 30},
    'qj97-bu0x-coel-byq8': {'value': 20, 'activations': 30},
    'pijd-j2vy-chbw-as0i': {'value': 25, 'activations': 30},
    'tid5-eii7-25iy-ez7e': {'value': 25, 'activations': 30},
    'wp6i-i28p-04ms-iyi6': {'value': 15, 'activations': 30},
    '1ouy-qm11-rn38-0sac': {'value': 30, 'activations': 30},
    'li2c-dt2d-z14m-9t4g': {'value': 30, 'activations': 30},
    '36p9-6dcg-ang4-5skc': {'value': 15, 'activations': 30},
    'kfzn-wm3q-wdan-yzoe': {'value': 20, 'activations': 30},
    'pmag-pk04-y0nh-qsms': {'value': 15, 'activations': 30},
    'n4xr-7pyj-4bxi-ofbt': {'value': 30, 'activations': 30},
    'c7gk-gajj-orq6-8w2j': {'value': 20, 'activations': 30}
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –ø—Ä–æ–º–æ–∫–æ–¥—É
@bot.message_handler(func=lambda message: message.text.startswith('üéü –ü—Ä–æ–º–æ–∫–æ–¥'))
def promo_code(message):
    markup = telebot.types.ReplyKeyboardRemove()
    bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –ø—Ä–æ–º–æ–∫–æ–¥:", reply_markup=markup)
    bot.register_next_step_handler(message, process_promo_code)

def process_promo_code(message):
    user_id = message.from_user.id
    promo_code = message.text.strip()

    if promo_code in promocodes and promocodes[promo_code]["activations"] > 0:
        promocodes[promo_code]["activations"] -= 1
        users_data[user_id]['balance'] += promocodes[promo_code]["value"]
        save_data()
        bot.send_message(message.chat.id, f"üéâ –ü—Ä–æ–º–æ–∫–æ–¥ —É—Å–ø—ñ—à–Ω–æ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ! –í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ {promocodes[promo_code]['value']} LuckyTokens. –ó–∞–ª–∏—à–∏–ª–æ—Å—è –∞–∫—Ç–∏–≤–∞—Ü—ñ–π: {promocodes[promo_code]['activations']}", reply_markup=main_keyboard)
    else:
        bot.send_message(message.chat.id, "‚ùå –ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ–¥—ñ–π—Å–Ω–∏–π –∞–±–æ –≤—Å—ñ –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ.", reply_markup=main_keyboard)

# –ö–Ω–æ–ø–∫–∞ –±–∞–ª–∞–Ω—Å—É
@bot.message_handler(func=lambda m: m.text == 'üìä –ë–∞–ª–∞–Ω—Å')
def show_balance(message):
    user_id = message.from_user.id
    balance = users_data.get(user_id, {}).get('balance', 0)

    # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –¥–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è, —è–∫—â–æ –±–∞–ª–∞–Ω—Å –¥–æ—Å—Ç–∞—Ç–Ω—ñ–π
    if balance >= 250:
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add('üí∏ –í–∏–≤–µ—Å—Ç–∏')
        bot.send_message(message.chat.id, f"ü™ô –í–∞—à –±–∞–ª–∞–Ω—Å: {balance} LuckyTokens", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, f"ü™ô –í–∞—à –±–∞–ª–∞–Ω—Å: {balance} LuckyTokens
–î–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è –ø–æ—Ç—Ä—ñ–±–Ω–æ –º–∞—Ç–∏ –º—ñ–Ω—ñ–º—É–º 250 LuckyTokens.", reply_markup=main_keyboard)

# –ö–Ω–æ–ø–∫–∞ –≤–∏–≤–µ–¥–µ–Ω–Ω—è
@bot.message_handler(func=lambda m: m.text == 'üí∏ –í–∏–≤–µ—Å—Ç–∏')
def withdraw(message):
    user_id = message.from_user.id
    balance = users_data.get(user_id, {}).get('balance', 0)

    if balance >= 250:
        # –õ–æ–≥—ñ–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞—è–≤–∫–∏ –Ω–∞ –≤–∏–≤–µ–¥–µ–Ω–Ω—è
        users_data[user_id]['withdraw_request'] = {
            'amount': 250,
            'status': 'pending',  # –°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ "–æ—á—ñ–∫—É—î"
            'timestamp': int(time.time())
        }
        save_data()
        # –°–ø–æ–≤—ñ—â–∞—î–º–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        bot.send_message(ADMIN_ID, f"üì© –ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤–∏–≤–µ–¥–µ–Ω–Ω—è –≤—ñ–¥ {message.from_user.first_name} (@{message.from_user.username}): {250} LuckyTokens. –ß–∞—Å: {time.ctime()}")
        bot.send_message(message.chat.id, "üìù –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤–∏–≤–µ–¥–µ–Ω–Ω—è –ø—Ä–∏–π–Ω—è—Ç–∞. –ó–∞—è–≤–∫–∞ –±—É–¥–µ —Ä–æ–∑–≥–ª—è–Ω—É—Ç–∞ –ø—Ä–æ—Ç—è–≥–æ–º 48 –≥–æ–¥–∏–Ω.", reply_markup=main_keyboard)
    else:
        bot.send_message(message.chat.id, "‚ùå –î–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è –ø–æ—Ç—Ä—ñ–±–Ω–æ –º–∞—Ç–∏ –º—ñ–Ω—ñ–º—É–º 250 LuckyTokens.", reply_markup=main_keyboard)

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ –≤–∏–≤–µ–¥–µ–Ω–Ω—è –ø—ñ—Å–ª—è 48 –≥–æ–¥–∏–Ω
def check_withdrawals():
    while True:
        print("–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞—è–≤–æ–∫ –Ω–∞ –≤–∏–≤–µ–¥–µ–Ω–Ω—è...")
        current_time = int(time.time())
        for user_id, data in users_data.items():
            withdraw_request = data.get('withdraw_request', {})
            if withdraw_request and withdraw_request['status'] == 'pending':
                # –Ø–∫—â–æ –∑ –º–æ–º–µ–Ω—Ç—É –∑–∞—è–≤–∫–∏ –ø—Ä–æ–π—à–ª–æ –±—ñ–ª—å—à–µ 48 –≥–æ–¥–∏–Ω
                if current_time - withdraw_request['timestamp'] >= 48 * 3600:
                    # –ó–º—ñ–Ω–∞ —Å—Ç–∞—Ç—É—Å—É –∑–∞—è–≤–∫–∏ –Ω–∞ —Ä–æ–∑–≥–ª—è–Ω—É—Ç—É
                    users_data[user_id]['withdraw_request']['status'] = 'processed'
                    save_data()
                    bot.send_message(user_id, "‚ùóÔ∏è –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤–∏–≤–µ–¥–µ–Ω–Ω—è –±—É–ª–∞ —Ä–æ–∑–≥–ª—è–Ω—É—Ç–∞ —ñ –≤–∏–∫–æ–Ω–∞–Ω–∞!", reply_markup=main_keyboard)
                    # –°–ø–æ–≤—ñ—â–∞—î–º–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                    bot.send_message(ADMIN_ID, f"‚úÖ –ó–∞—è–≤–∫–∞ –Ω–∞ –≤–∏–≤–µ–¥–µ–Ω–Ω—è –≤—ñ–¥ {user_id} –±—É–ª–∞ –æ–±—Ä–æ–±–ª–µ–Ω–∞.")
        time.sleep(3600)  # –ü–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ —â–æ–≥–æ–¥–∏–Ω–∏

# –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–∞—è–≤–æ–∫ –Ω–∞ –≤–∏–≤–µ–¥–µ–Ω–Ω—è
threading.Thread(target=check_withdrawals, daemon=True).start()

print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ...")
bot.infinity_polling()
